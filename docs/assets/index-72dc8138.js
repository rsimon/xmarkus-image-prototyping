(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const s of r.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&n(s)}).observe(document,{childList:!0,subtree:!0});function o(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(e){if(e.ep)return;e.ep=!0;const r=o(e);fetch(e.href,r)}})();const a=c=>new Promise((t,o)=>{const n=new FileReader;n.onload=e=>{var i;const r=(i=e.target)==null?void 0:i.result,s=new Blob([r],{type:c.type});t(s)},n.onerror=e=>{o(e.target.error)},n.readAsArrayBuffer(c)}),l=()=>new Promise(c=>{const t=document.createElement("input");t.type="file",t.webkitdirectory=!0,t.addEventListener("change",()=>{let o=Array.from(t.files);c(o)}),"showPicker"in HTMLInputElement.prototype?t.showPicker():t.click()});window.onload=function(){document.getElementById("load").addEventListener("click",async()=>{l().then(t=>{t.forEach(async o=>{o.name;const n=await a(o);console.log(o,n)})})})};
